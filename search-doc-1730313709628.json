[{"title":"Base64","type":0,"sectionRef":"#","url":"/Aloha/api/Base64","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Base64","url":"/Aloha/api/Base64#functions","content":" "},{"title":"encode​","type":1,"pageTitle":"Base64","url":"/Aloha/api/Base64#encode","content":"&lt;/&gt; Base64.encode( input: buffer-- Buffer to encode ) → buffer-- Base64 encoded buffer   "},{"title":"decode​","type":1,"pageTitle":"Base64","url":"/Aloha/api/Base64#decode","content":"&lt;/&gt; Base64.decode( input: buffer-- Base64 encoded buffer ) → buffer-- Decoded buffer  "},{"title":"Bot","type":0,"sectionRef":"#","url":"/Aloha/api/Bot","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#properties","content":" "},{"title":"DISCORD_API_VERSION​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#DISCORD_API_VERSION","content":"&lt;/&gt; Bot.DISCORD_API_VERSION: string The Discord API version being used.  "},{"title":"ALOHA_VERSION​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#ALOHA_VERSION","content":"&lt;/&gt; Bot.ALOHA_VERSION: string The current version of Aloha.  "},{"title":"PROCESS_ID​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#PROCESS_ID","content":"&lt;/&gt; Bot.PROCESS_ID: number The current process ID.  "},{"title":"TOKEN​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#TOKEN","content":"&lt;/&gt; Bot.TOKEN: string The bot's authentication token.  "},{"title":"Client​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#Client","content":"&lt;/&gt; Bot.Client: any The Discord client instance.  "},{"title":"Shards​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#Shards","content":"&lt;/&gt; Bot.Shards: {[number]: { Sent: number, Socket: WebSocket, ResumeURL: string, SessionID: string }} Table of active shards and their data.  "},{"title":"SHARD_COUNT​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#SHARD_COUNT","content":"&lt;/&gt; Bot.SHARD_COUNT: number The total number of shards.  "},{"title":"STARTED_AT​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#STARTED_AT","content":"&lt;/&gt; Bot.STARTED_AT: number Unix timestamp of when the bot started.  "},{"title":"RATE_LIMIT​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#RATE_LIMIT","content":"&lt;/&gt; Bot.RATE_LIMIT: number Current rate limit value.  "},{"title":"INTENTS​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#INTENTS","content":"&lt;/&gt; Bot.INTENTS: number The gateway intents being used.  "},{"title":"GLOBAL_RATE_LIMIT​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#GLOBAL_RATE_LIMIT","content":"&lt;/&gt; Bot.GLOBAL_RATE_LIMIT: boolean Whether a global rate limit is active.  "},{"title":"OP​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#OP","content":"&lt;/&gt; Bot.OP: {[string]: (...any) → { op: number, d: any }} Gateway operation code handlers.  "},{"title":"CLOSE_REASONS​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#CLOSE_REASONS","content":"&lt;/&gt; Bot.CLOSE_REASONS: {[number]: string} Mapping of WebSocket close codes to readable reasons. "},{"title":"Functions​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#functions","content":" "},{"title":"GenerateGUID​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#GenerateGUID","content":"&lt;/&gt; Bot.GenerateGUID( wrapInBraces: boolean?-- Whether to wrap the GUID in braces ) → string-- The generated GUID Generates a random GUID string.  "},{"title":"GetShard​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#GetShard","content":"&lt;/&gt; Bot.GetShard( guild_id: DiscordTypes.snowflake-- The guild ID to get shard for ) → number?-- The shard ID for the guild Calculates which shard a guild belongs to.  "},{"title":"SetGlobalRateLimit​","type":1,"pageTitle":"Bot","url":"/Aloha/api/Bot#SetGlobalRateLimit","content":"&lt;/&gt; Bot.SetGlobalRateLimit( enabled: boolean-- Whether to enable global rate limiting ) → () Sets the global rate limit state. "},{"title":"Aloha","type":0,"sectionRef":"#","url":"/Aloha/api/Aloha","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Aloha","url":"/Aloha/api/Aloha#functions","content":" "},{"title":"ClearTemp​","type":1,"pageTitle":"Aloha","url":"/Aloha/api/Aloha#ClearTemp","content":"&lt;/&gt; Aloha.ClearTemp() → () Clears the temporary directory used by Aloha  "},{"title":"Run​","type":1,"pageTitle":"Aloha","url":"/Aloha/api/Aloha#Run","content":"&lt;/&gt; Aloha.Run( token: string,-- The Discord bot token intents: number?-- Optional gateway intents bitmask ) → {[number]: { Socket: DiscordWebSocket, ResumeURL: string, SessionID: string }}-- Table of shards Starts the Discord bot with the given token and intents  "},{"title":"RegisterCommandsIn​","type":1,"pageTitle":"Aloha","url":"/Aloha/api/Aloha#RegisterCommandsIn","content":"&lt;/&gt; Aloha.RegisterCommandsIn( directory: string-- Directory containing command modules ) → () Registers all commands in the specified directory "},{"title":"Client","type":0,"sectionRef":"#","url":"/Aloha/api/Client","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#properties","content":" "},{"title":"User​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#User","content":"&lt;/&gt; Client.User: any The bot's user object. "},{"title":"Functions​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#functions","content":" "},{"title":"On​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#On","content":"&lt;/&gt; Client.On( event: EventString,-- The event to listen for callback: function-- The callback function to run when the event fires ) → Event.Connection?-- The event connection, if successful Registers an event handler for the specified Discord gateway event.  "},{"title":"Fire​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#Fire","content":"&lt;/&gt; Client.Fire( event: string,-- The event name to fire payload: Payload,-- The event payload shard_id: number?-- Optional shard ID ) → () Fires a Discord gateway event internally.  "},{"title":"GetWebhook​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#GetWebhook","content":"&lt;/&gt; Client.GetWebhook( id: string-- The webhook ID ) → Webhook-- The webhook object Gets a webhook.  "},{"title":"GetWebhookWithToken​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#GetWebhookWithToken","content":"&lt;/&gt; Client.GetWebhookWithToken( id: string,-- The webhook ID token: string-- The webhook token ) → Webhook-- The webhook object Gets a webhook with a token.  "},{"title":"ModifyWebhook​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#ModifyWebhook","content":"&lt;/&gt; Client.ModifyWebhook( id: string,-- The webhook ID data: { name: string, avatar: string? },-- The webhook data reason: string?-- Optional reason for the webhook modification in audit logs ) → ( boolean, {any}? )-- Whether the webhook was modified and any response data Modifies a webhook.  "},{"title":"ModifyWebhookWithToken​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#ModifyWebhookWithToken","content":"&lt;/&gt; Client.ModifyWebhookWithToken( id: string,-- The webhook ID token: string,-- The webhook token data: { name: string, avatar: string? },-- The webhook data reason: string?-- Optional reason for the webhook modification in audit logs ) → ( boolean, {any}? )-- Whether the webhook was modified and any response data Modifies a webhook with a token.  "},{"title":"DeleteWebhook​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#DeleteWebhook","content":"&lt;/&gt; Client.DeleteWebhook( id: string,-- The webhook ID reason: string?-- Optional reason for the webhook deletion in audit logs ) → boolean-- Whether the webhook was deleted Deletes a webhook.  "},{"title":"DeleteWebhookWithToken​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#DeleteWebhookWithToken","content":"&lt;/&gt; Client.DeleteWebhookWithToken( id: string,-- The webhook ID token: string,-- The webhook token reason: string?-- Optional reason for the webhook deletion in audit logs ) → boolean-- Whether the webhook was deleted Deletes a webhook with a token.  "},{"title":"ExecuteWebhook​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#ExecuteWebhook","content":"&lt;/&gt; Client.ExecuteWebhook( id: string,-- The webhook ID token: string,-- The webhook token wait: boolean?,-- Whether to wait for the webhook to execute thread_id: string?,-- The thread ID data: DiscordTypes.ExecuteWebhookData,-- The webhook data files: {string}?-- The files to send ) → ( boolean, {any}? )-- Whether the webhook was executed and any response data Executes a webhook.  "},{"title":"GetWebhookMessage​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#GetWebhookMessage","content":"&lt;/&gt; Client.GetWebhookMessage( id: string,-- The webhook ID token: string,-- The webhook token message_id: string-- The message ID ) → ( boolean, {any}? )-- Whether the message was fetched and any response data Gets a webhook message.  "},{"title":"EditWebhookMessage​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#EditWebhookMessage","content":"&lt;/&gt; Client.EditWebhookMessage( id: string,-- The webhook ID token: string,-- The webhook token message_id: string,-- The message ID data: DiscordTypes.ExecuteWebhookData-- The webhook data ) → ( boolean, {any}? )-- Whether the message was edited and any response data Edits a webhook message.  "},{"title":"DeleteWebhookMessage​","type":1,"pageTitle":"Client","url":"/Aloha/api/Client#DeleteWebhookMessage","content":"&lt;/&gt; Client.DeleteWebhookMessage( id: string,-- The webhook ID token: string,-- The webhook token message_id: string-- The message ID ) → boolean-- Whether the message was deleted Deletes a webhook message. "},{"title":"Command","type":0,"sectionRef":"#","url":"/Aloha/api/Command","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Command","url":"/Aloha/api/Command#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Command","url":"/Aloha/api/Command#new","content":"&lt;/&gt; Command.new( data: ApplicationCommandData-- The command data from Discord ) → Command-- A new Command instance   "},{"title":"SetResponse​","type":1,"pageTitle":"Command","url":"/Aloha/api/Command#SetResponse","content":"&lt;/&gt; Command:SetResponse( callback: (ApplicationCommandInteractionData) → { type: number, data: InteractionCallbackData }-- The response callback function ) → () Sets the response handler for when the command is executed. "},{"title":"Color3","type":0,"sectionRef":"#","url":"/Aloha/api/Color3","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#new","content":"&lt;/&gt; Color3.new( r: number, g: number, b: number ) → Color3 Creates a new Color3.  "},{"title":"fromRGB​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#fromRGB","content":"&lt;/&gt; Color3.fromRGB( r: number, g: number, b: number ) → Color3 Creates a new Color3 from RGB values.  "},{"title":"fromHex​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#fromHex","content":"&lt;/&gt; Color3.fromHex(hex: string) → Color3 Creates a new Color3 from a hex string.  "},{"title":"fromHSV​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#fromHSV","content":"&lt;/&gt; Color3.fromHSV( h: number, s: number, v: number ) → Color3 Creates a new Color3 from HSV values.  "},{"title":"ToHex​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#ToHex","content":"&lt;/&gt; Color3:ToHex() → string Converts the Color3 to a hex string.  "},{"title":"ToHSV​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#ToHSV","content":"&lt;/&gt; Color3:ToHSV() → number,number,number Converts the Color3 to HSV values.  "},{"title":"Lerp​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#Lerp","content":"&lt;/&gt; Color3:Lerp( other: Color3, alpha: number ) → Color3 Lerps between two colors.  "},{"title":"ToInt​","type":1,"pageTitle":"Color3","url":"/Aloha/api/Color3#ToInt","content":"&lt;/&gt; Color3:ToInt() → number Converts the Color3 to an integer. "},{"title":"Commands","type":0,"sectionRef":"#","url":"/Aloha/api/Commands","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#types","content":" "},{"title":"GlobalCommand​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#GlobalCommand","content":"&lt;/&gt; type GlobalCommand = { name: string, name_localizations: {[string]: string}?, description: string?, description_localizations: {[string]: string}?, options: {CommandOptionData}?, default_member_permissions: string?, integration_types: {number}?, contexts: {number}?, type: number, nsfw: boolean? } Data for registering a global application command.  "},{"title":"GuildCommand​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#GuildCommand","content":"&lt;/&gt; type GuildCommand = { name: string, name_localizations: {[string]: string}?, description: string?, description_localizations: {[string]: string}?, options: CommandOptionData?, default_member_permissions: string?, default_permission: boolean?, type: number, nsfw: boolean? } Data for registering a guild-specific application command.  "},{"title":"Command​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#Command","content":"&lt;/&gt; type Command = ApplicationCommandData&amp;{ Executed: Event, Response: { type: number, data: InteractionCallbackData }? } A Discord application command instance. "},{"title":"Properties​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#properties","content":" "},{"title":"Cache​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#Cache","content":"&lt;/&gt; Commands.Cache: {[string]: Command} Cache of registered commands indexed by ID.  "},{"title":"RateLimit​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#RateLimit","content":"&lt;/&gt; Commands.RateLimit: {[string]: boolean} Rate limit tracking for command usage. "},{"title":"Functions​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#functions","content":" "},{"title":"RegisterGlobal​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#RegisterGlobal","content":"&lt;/&gt; Commands.RegisterGlobal( data: GlobalCommand-- The command data to register ) → Command,string-- The registered command and status message Registers a global application command.  "},{"title":"RegisterGuild​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#RegisterGuild","content":"&lt;/&gt; Commands.RegisterGuild( data: GuildCommand,-- The command data to register guild_id: string-- The ID of the guild to register the command in ) → Command,string-- The registered command and status message Registers a guild-specific application command.  "},{"title":"HandleInteraction​","type":1,"pageTitle":"Commands","url":"/Aloha/api/Commands#HandleInteraction","content":"&lt;/&gt; Commands.HandleInteraction( int: InteractionData,-- The interaction data from Discord shard_id: number?-- Optional shard ID ) → Network.Response?-- The response from the interaction, if successful Handles an incoming command interaction. Returns nothing if the command is ratelimited. "},{"title":"Components","type":0,"sectionRef":"#","url":"/Aloha/api/Components","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Components","url":"/Aloha/api/Components#functions","content":" "},{"title":"GetInteractionSignal​","type":1,"pageTitle":"Components","url":"/Aloha/api/Components#GetInteractionSignal","content":"&lt;/&gt; Components.GetInteractionSignal( componentType: number-- The type of component to get the signal for ) → Event&lt;( Objects.Interaction, number? )&gt;-- The event for the component type   "},{"title":"HandleInteraction​","type":1,"pageTitle":"Components","url":"/Aloha/api/Components#HandleInteraction","content":"&lt;/&gt; Components.HandleInteraction( int: DiscordTypes.InteractionData,-- The interaction data shard_id: number?-- The shard ID ) → ()  "},{"title":"Debug","type":0,"sectionRef":"#","url":"/Aloha/api/Debug","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Debug","url":"/Aloha/api/Debug#properties","content":" "},{"title":"AllowedUsers​","type":1,"pageTitle":"Debug","url":"/Aloha/api/Debug#AllowedUsers","content":"&lt;/&gt; Debug.AllowedUsers: {string} List of user IDs that are allowed to use debug functionality "},{"title":"Functions​","type":1,"pageTitle":"Debug","url":"/Aloha/api/Debug#functions","content":" "},{"title":"AddUser​","type":1,"pageTitle":"Debug","url":"/Aloha/api/Debug#AddUser","content":"&lt;/&gt; Debug.AddUser( user: Objects.User | string-- The user or user ID to add to allowed users ) → () Adds a user to the list of users allowed to use debug functionality "},{"title":"Channel","type":0,"sectionRef":"#","url":"/Aloha/api/Channel","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#types","content":" "},{"title":"Channel​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#Channel","content":"&lt;/&gt; type Channel = {guild: Guild} A channel object. "},{"title":"Functions​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#new","content":"&lt;/&gt; Channel.new( data: DiscordTypes.ChannelData-- The channel data ) → Channel-- The channel object Creates a new channel object.  "},{"title":"Send​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#Send","content":"&lt;/&gt; Channel:Send( content: string,-- The message content embeds: {DiscordTypes.EmbedData}?,-- Optional embeds to send reference: DiscordTypes.MessageReferenceData?-- Optional message reference data ) → boolean-- Whether the message was sent Sends a message to the channel.  "},{"title":"Delete​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#Delete","content":"&lt;/&gt; Channel:Delete( message_id: string-- The message ID to delete ) → boolean-- Whether the message was deleted Deletes a message in the channel.  "},{"title":"GetMessage​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#GetMessage","content":"&lt;/&gt; Channel:GetMessage( id: string-- The message ID ) → Message-- The message object Gets a message in the channel.  "},{"title":"CrossPost​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#CrossPost","content":"&lt;/&gt; Channel:CrossPost( message_id: string-- The message ID ) → boolean-- Whether the message was crossposted Crossposts a message in an announcement channel to other channels.  "},{"title":"BulkDelete​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#BulkDelete","content":"&lt;/&gt; Channel:BulkDelete( message_ids: {string},-- The message IDs reason: string?-- Optional reason for the bulk delete in audit logs ) → boolean-- Whether the messages were deleted Bulk deletes messages in the channel.  "},{"title":"GetInvites​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#GetInvites","content":"&lt;/&gt; Channel:GetInvites() → ( {DiscordTypes.InviteData} | boolean, {any}? )-- The invites Gets the invites in the channel.  "},{"title":"CreateInvite​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#CreateInvite","content":"&lt;/&gt; Channel:CreateInvite( data: { max_age: number?, max_uses: number?, temporary: boolean?, unique: boolean?, target_type: number?, target_user_id: string?, target_application_id: string? },-- The invite data reason: string?-- Optional reason for the invite in audit logs ) → ( boolean, {any}? )-- Whether the invite was created and any response data Creates an invite in the channel.  "},{"title":"DeletePermission​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#DeletePermission","content":"&lt;/&gt; Channel:DeletePermission( overwrite_id: string,-- The overwrite ID reason: string?-- Optional reason for the overwrite deletion in audit logs ) → ( boolean, Response )-- Whether the overwrite was deleted Deletes a permission overwrite in the channel.  "},{"title":"TriggerTypingIndicator​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#TriggerTypingIndicator","content":"&lt;/&gt; Channel:TriggerTypingIndicator() → boolean-- Whether the typing indicator was triggered Triggers a typing indicator in the channel.  "},{"title":"GetPinnedMessages​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#GetPinnedMessages","content":"&lt;/&gt; Channel:GetPinnedMessages() → ( {Message} | boolean, {any}? )-- The pinned messages Gets the pinned messages in the channel.  "},{"title":"PinMessage​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#PinMessage","content":"&lt;/&gt; Channel:PinMessage( message_id: string,-- The message ID reason: string? ) → boolean-- Whether the message was pinned Pins a message in the channel.  "},{"title":"CreateWebhook​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#CreateWebhook","content":"&lt;/&gt; Channel:CreateWebhook( data: { name: string, avatar: string? },-- The webhook data reason: string?-- Optional reason for the webhook creation in audit logs ) → ( boolean, {any}? )-- Whether the webhook was created and any response data Creates a webhook in the channel.  "},{"title":"GetWebhooks​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#GetWebhooks","content":"&lt;/&gt; Channel:GetWebhooks() → ({Webhook} | {string: Webhook})-- The webhooks Gets the webhooks in the channel.  "},{"title":"UnpinMessage​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#UnpinMessage","content":"&lt;/&gt; Channel:UnpinMessage( message_id: string-- The message ID ) → boolean-- Whether the message was unpinned Unpins a message in the channel.  "},{"title":"Modify​","type":1,"pageTitle":"Channel","url":"/Aloha/api/Channel#Modify","content":"&lt;/&gt; Channel:Modify( data: DiscordTypes.ChannelData&amp;{icon: string?}-- The channel data to modify ) → ( boolean, {any}? )-- Whether the channel was modified and any response data Modifies the channel. "},{"title":"DiscordWebSocket","type":0,"sectionRef":"#","url":"/Aloha/api/DiscordWebSocket","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DiscordWebSocket","url":"/Aloha/api/DiscordWebSocket#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DiscordWebSocket","url":"/Aloha/api/DiscordWebSocket#new","content":"&lt;/&gt; DiscordWebSocket.new( url: string, token: string, shard_id: number, shards: number ) → DiscordWebSocket Creates a new DiscordWebSocket.  "},{"title":"Send​","type":1,"pageTitle":"DiscordWebSocket","url":"/Aloha/api/DiscordWebSocket#Send","content":"&lt;/&gt; DiscordWebSocket:Send(data: Payload) → () Sends a payload to Discord. "},{"title":"Enum","type":0,"sectionRef":"#","url":"/Aloha/api/Enum","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#types","content":" "},{"title":"APPLICATION_COMMAND_OPTION_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#APPLICATION_COMMAND_OPTION_TYPE","content":"&lt;/&gt; interface APPLICATION_COMMAND_OPTION_TYPE { SUB_COMMAND: number-- Subcommand option type SUB_COMMAND_GROUP: number-- Subcommand group option type STRING: number-- String option type INTEGER: number-- Integer option type BOOLEAN: number-- Boolean option type USER: number-- User option type CHANNEL: number-- Channel option type ROLE: number-- Role option type MENTIONABLE: number-- Mentionable option type NUMBER: number-- Number option type ATTACHMENT: number-- Attachment option type }   "},{"title":"CHANNEL_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#CHANNEL_TYPE","content":"&lt;/&gt; interface CHANNEL_TYPE { GUILD_TEXT: number-- Text channel DM: number-- DM channel GUILD_VOICE: number-- Voice channel GROUP_DM: number-- Group DM channel GUILD_CATEGORY: number-- Category channel GUILD_ANNOUNCEMENT: number-- Announcement channel ANNOUNCEMENT_THREAD: number-- Announcement thread PUBLIC_THREAD: number-- Public thread PRIVATE_THREAD: number-- Private thread GUILD_STAGE_VOICE: number-- Stage voice channel GUILD_DIRECTORY: number-- Directory channel GUILD_FORUM: number-- Forum channel GUILD_MEDIA: number-- Media channel }   "},{"title":"INTERACTION_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#INTERACTION_TYPE","content":"&lt;/&gt; interface INTERACTION_TYPE { PING: number-- Ping interaction APPLICATION_COMMAND: number-- Application command interaction MESSAGE_COMPONENT: number-- Message component interaction APPLICATION_COMMAND_AUTOCOMPLETE: number-- Application command autocomplete interaction MODAL_SUBMIT: number-- Modal submit interaction }   "},{"title":"INTERACTION_CALLBACK_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#INTERACTION_CALLBACK_TYPE","content":"&lt;/&gt; interface INTERACTION_CALLBACK_TYPE { PONG: number-- Pong response CHANNEL_MESSAGE_WITH_SOURCE: number-- Channel message with source DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE: number-- Deferred channel message with source DEFERRED_UPDATE_MESSAGE: number-- Deferred message update UPDATE_MESSAGE: number-- Message update APPLICATION_COMMAND_AUTOCOMPLETE_RESULT: number-- Autocomplete result MODAL: number-- Modal response PREMIUM_REQUIRED: number-- Premium required response LAUNCH_ACTIVITY: number-- Launch activity response }   "},{"title":"INTERACTION_CONTEXT_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#INTERACTION_CONTEXT_TYPE","content":"&lt;/&gt; interface INTERACTION_CONTEXT_TYPE { GUILD: number-- Guild context BOT_DM: number-- Bot DM context PRIVATE_CHANNEL: number-- Private channel context }   "},{"title":"APPLICATION_INTEGRATION_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#APPLICATION_INTEGRATION_TYPE","content":"&lt;/&gt; interface APPLICATION_INTEGRATION_TYPE { GUILD_INSTALL: number-- Guild installation USER_INSTALL: number-- User installation }   "},{"title":"APPLICATION_COMMAND_TYPE​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#APPLICATION_COMMAND_TYPE","content":"&lt;/&gt; interface APPLICATION_COMMAND_TYPE { CHAT_INPUT: number-- Chat input command USER: number-- User command MESSAGE: number-- Message command PRIMARY_ENTRY_POINT: number-- Primary entry point command }   "},{"title":"APPLICATION_COMMAND_HANDLER​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#APPLICATION_COMMAND_HANDLER","content":"&lt;/&gt; interface APPLICATION_COMMAND_HANDLER { APP_HANDLER: number-- App handler DISCORD_LAUNCH_ACTIVITY: number-- Discord launch activity }   "},{"title":"MESSAGE_FLAGS​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#MESSAGE_FLAGS","content":"&lt;/&gt; interface MESSAGE_FLAGS { CROSSPOST: number-- Message is crossposted IS_CROSSPOST: number-- Message is a crosspost SUPPRESS_EMBEDS: number-- Message embeds are suppressed SOURCE_MESSAGE_DELETED: number-- Source message was deleted URGENT: number-- Message is urgent HAS_THREAD: number-- Message has a thread EPHEMERAL: number-- Message is ephemeral LOADING: number-- Message is loading FAILED_TO_MENTION_SOME_ROLES_IN_THREAD: number-- Failed to mention some roles in thread SUPPRESS_NOTIFICATIONS: number-- Notifications are suppressed IS_VOICE_MESSAGE: number-- Message is a voice message }   "},{"title":"INTENTS​","type":1,"pageTitle":"Enum","url":"/Aloha/api/Enum#INTENTS","content":"&lt;/&gt; interface INTENTS { DEFAULT: number-- Default intents NONE: number-- No intents ALL: number-- All intents }  "},{"title":"Embed","type":0,"sectionRef":"#","url":"/Aloha/api/Embed","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#new","content":"&lt;/&gt; Embed.new() → Embed Creates a new Embed.  "},{"title":"setTitle​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setTitle","content":"&lt;/&gt; Embed.setTitle(title: string) → Embed Sets the title of the embed.  "},{"title":"setDescription​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setDescription","content":"&lt;/&gt; Embed.setDescription(description: string) → Embed Sets the description of the embed.  "},{"title":"setUrl​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setUrl","content":"&lt;/&gt; Embed.setUrl(url: string) → Embed Sets the URL of the embed.  "},{"title":"setTimestamp​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setTimestamp","content":"&lt;/&gt; Embed.setTimestamp(time: string?) → Embed Sets the timestamp of the embed.  "},{"title":"setColor​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setColor","content":"&lt;/&gt; Embed.setColor(color: Color3) → Embed Sets the color of the embed.  "},{"title":"setFooter​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setFooter","content":"&lt;/&gt; Embed.setFooter( text: string, icon_url: string?, proxy_icon_url: string? ) → Embed Sets the footer of the embed.  "},{"title":"setImage​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setImage","content":"&lt;/&gt; Embed.setImage( url: string, height: number?, width: number?, proxy_url: string? ) → Embed Sets the image of the embed.  "},{"title":"setThumbnail​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setThumbnail","content":"&lt;/&gt; Embed.setThumbnail( url: string, height: number?, width: number?, proxy_url: string? ) → Embed Sets the thumbnail of the embed.  "},{"title":"setVideo​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setVideo","content":"&lt;/&gt; Embed.setVideo( url: string, height: number?, width: number?, proxy_url: string? ) → Embed Sets the video of the embed.  "},{"title":"setProvider​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setProvider","content":"&lt;/&gt; Embed.setProvider( name: string?, url: string? ) → Embed Sets the provider of the embed.  "},{"title":"setAuthor​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setAuthor","content":"&lt;/&gt; Embed.setAuthor( name: string, icon_url: string?, url: string?, proxy_icon_url: string? ) → Embed Sets the author of the embed.  "},{"title":"setFields​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#setFields","content":"&lt;/&gt; Embed.setFields(fields: {{ name: string, value: string, inline: boolean? }}) → Embed Sets the fields of the embed.  "},{"title":"addField​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#addField","content":"&lt;/&gt; Embed.addField( name: string, value: string, inline: boolean? ) → Embed Adds a field to the embed.  "},{"title":"Evaluator","type":0,"sectionRef":"#","url":"/Aloha/api/Evaluator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Evaluator","url":"/Aloha/api/Evaluator#functions","content":" "},{"title":"Evaluate​","type":1,"pageTitle":"Evaluator","url":"/Aloha/api/Evaluator#Evaluate","content":"&lt;/&gt; Evaluator.Evaluate( code: string-- The Luau code to evaluate ) → string,boolean-- Returns the evaluation result and success status Evaluates the given Luau code in a sandboxed environment with a timeout "},{"title":"finish​","type":1,"pageTitle":"Embed","url":"/Aloha/api/Embed#finish","content":"&lt;/&gt; Embed.finish() → DiscordTypes.EmbedData Finishes the embed and returns the embed data as a structured table. "},{"title":"Event","type":0,"sectionRef":"#","url":"/Aloha/api/Event","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Event","url":"/Aloha/api/Event#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Event","url":"/Aloha/api/Event#new","content":"&lt;/&gt; Event.new() → Event Creates a new Event.  "},{"title":"Connect​","type":1,"pageTitle":"Event","url":"/Aloha/api/Event#Connect","content":"&lt;/&gt; Event:Connect(func: (any) → any) → Connection? Connects a function to the event.  "},{"title":"Fire​","type":1,"pageTitle":"Event","url":"/Aloha/api/Event#Fire","content":"&lt;/&gt; Event:Fire(...: any) → () Fires the event.  "},{"title":"Wait​","type":1,"pageTitle":"Event","url":"/Aloha/api/Event#Wait","content":"&lt;/&gt; Event:Wait(timeout: number?) → any Waits for the event to fire. "},{"title":"Interaction","type":0,"sectionRef":"#","url":"/Aloha/api/Interaction","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Interaction","url":"/Aloha/api/Interaction#types","content":" "},{"title":"Interaction​","type":1,"pageTitle":"Interaction","url":"/Aloha/api/Interaction#Interaction","content":"&lt;/&gt; type Interaction = { id: DiscordTypes.snowflake, application_id: DiscordTypes.snowflake, type: number, data: (DiscordTypes.ApplicationCommandInteractionData | DiscordTypes.MessageComponentInteractionData)?, guild: Guild?, guild_id: DiscordTypes.snowflake?, channel: Channel?, channel_id: DiscordTypes.snowflake?, member: Member?, user: User?, token: string, version: number, message: Message, app_permissions: string, locale: string, guild_locale: string, entitlements: {DiscordTypes.EntitlementData}?, authorizing_integration_owners: {[number]: DiscordTypes.snowflake}, context: number } An interaction object. "},{"title":"Functions​","type":1,"pageTitle":"Interaction","url":"/Aloha/api/Interaction#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Interaction","url":"/Aloha/api/Interaction#new","content":"&lt;/&gt; Interaction.new( data: DiscordTypes.InteractionData-- The interaction data ) → Interaction-- The interaction object Creates a new interaction object.  "},{"title":"Respond​","type":1,"pageTitle":"Interaction","url":"/Aloha/api/Interaction#Respond","content":"&lt;/&gt; Interaction:Respond( type: number,-- The type of response to send data: DiscordTypes.InteractionCallbackData,-- The data to send in the response with_response: boolean?-- Whether to wait for a response ) → boolean-- Whether the response was sent Responds to an interaction. "},{"title":"LinkedList","type":0,"sectionRef":"#","url":"/Aloha/api/LinkedList","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#types","content":" "},{"title":"LinkedListNode<T>​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#LinkedListNode<T>","content":"&lt;/&gt; type LinkedListNode&lt;T&gt; = { Next: LinkedListNode&lt;T&gt;?, Prev: LinkedListNode&lt;T&gt;?, Index: number, Value: T } A node in the linked list.  "},{"title":"LinkedList<T>​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#LinkedList<T>","content":"&lt;/&gt; type LinkedList&lt;T&gt; = { Head: LinkedListNode&lt;T&gt;?, Tail: LinkedListNode&lt;T&gt;?, Length: number } A linked list. "},{"title":"Functions​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#functions","content":" "},{"title":"new​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#new","content":"&lt;/&gt; LinkedList.new(...: T) → LinkedList&lt;T&gt; Creates a new linked list.  "},{"title":"iter​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#iter","content":"&lt;/&gt; LinkedList.iter(self: LinkedList&lt;T&gt;) → () An iterator for the linked list, allowing for for loops.  "},{"title":"Remove​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#Remove","content":"&lt;/&gt; LinkedList:Remove(Value: T) → boolean Removes a value from the linked list.  "},{"title":"RemoveIndex​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#RemoveIndex","content":"&lt;/&gt; LinkedList:RemoveIndex(Index: number) → boolean Removes a value from the linked list by index.  "},{"title":"PushRight​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#PushRight","content":"&lt;/&gt; LinkedList:PushRight(Value: T) → () Pushes a value to the right of the linked list.  "},{"title":"PushLeft​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#PushLeft","content":"&lt;/&gt; LinkedList:PushLeft(Value: T) → () Pushes a value to the left of the linked list.  "},{"title":"PopRight​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#PopRight","content":"&lt;/&gt; LinkedList:PopRight() → T? Pops a value from the right of the linked list.  "},{"title":"PopLeft​","type":1,"pageTitle":"LinkedList","url":"/Aloha/api/LinkedList#PopLeft","content":"&lt;/&gt; LinkedList:PopLeft() → T? Pops a value from the left of the linked list. "},{"title":"Member","type":0,"sectionRef":"#","url":"/Aloha/api/Member","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#types","content":" "},{"title":"Member​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#Member","content":"&lt;/&gt; type Member = { user: User?, nick: string?, avatar: string?, banner: string?, roles: {number}?, joined_at: string, premium_since: string?, deaf: boolean, mute: boolean, pending: boolean?, permissions: string?, communication_disabled_until: string?, avatar_decoration_data: DiscordTypes.AvatarDecorationData? } A member object. "},{"title":"Functions​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#new","content":"&lt;/&gt; Member.new( data: DiscordTypes.MemberData,-- The member data guild: Guild? | string?-- The guild object or ID ) → Member-- The member object Creates a new member object.  "},{"title":"Kick​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#Kick","content":"&lt;/&gt; Member:Kick() → boolean-- Whether the member was kicked Kicks the member from the guild.  "},{"title":"Ban​","type":1,"pageTitle":"Member","url":"/Aloha/api/Member#Ban","content":"&lt;/&gt; Member:Ban( delete_message_seconds: number?,-- Optional number of seconds of messages to delete reason: string? ) → boolean-- Whether the member was banned Bans the member from the guild. "},{"title":"Message","type":0,"sectionRef":"#","url":"/Aloha/api/Message","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#types","content":" "},{"title":"Message​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#Message","content":"&lt;/&gt; type Message = { channel: Channel, author: User, mentions: {User}, id: DiscordTypes.snowflake, channel_id: DiscordTypes.snowflake, content: string, timestamp: string, edited_timestamp: string?, tts: boolean, mention_everyone: boolean, mention_roles: {number}, mention_channels: {DiscordTypes.ChannelMentionData}, attachments: {DiscordTypes.AttachmentData}, embeds: {DiscordTypes.EmbedData}, reactions: {DiscordTypes.ReactionData}?, nonce: (number | string)?, pinned: boolean, webhook_id: DiscordTypes.snowflake?, type: number, activity: DiscordTypes.ActivityData?, application: DiscordTypes.ApplicationData?, application_id: DiscordTypes.snowflake?, flags: number?, message_reference: DiscordTypes.MessageReferenceData?, message_snapshots: {DiscordTypes.MessageSnapshotData}?, referenced_message: Message?, interaction_metadata: DiscordTypes.InteractionMetadataData?, interaction: DiscordTypes.InteractionData?, thread: DiscordTypes.ChannelData?, components: {DiscordTypes.ComponentData}?, sticker_items: {DiscordTypes.StickerItemData}?, stickers: {DiscordTypes.StickerData}?, position: number?, role_subscription_data: DiscordTypes.RoleSubscriptionData?, resolved: DiscordTypes.ResolvedData?, poll: DiscordTypes.PollData?, call: DiscordTypes.CallData? } A message object. "},{"title":"Functions​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#new","content":"&lt;/&gt; Message.new( data: DiscordTypes.MessageData-- The message data ) → Message-- The message object Creates a new message object.  "},{"title":"Delete​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#Delete","content":"&lt;/&gt; Message:Delete() → boolean-- Whether the message was deleted Deletes the message.  "},{"title":"Reply​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#Reply","content":"&lt;/&gt; Message:Reply( content: string,-- The message content embeds: {DiscordTypes.EmbedData}?-- Optional embeds to send ) → boolean-- Whether the message was sent Replies to the message.  "},{"title":"AddReaction​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#AddReaction","content":"&lt;/&gt; Message:AddReaction( emoji: string-- The emoji to add ) → boolean-- Whether the reaction was added Adds a reaction to the message.  "},{"title":"RemoveReaction​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#RemoveReaction","content":"&lt;/&gt; Message:RemoveReaction( emoji: string,-- The emoji to remove userId: string?-- Optional user ID to remove reaction from ) → boolean-- Whether the reaction was removed Removes a reaction from the message.  "},{"title":"Pin​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#Pin","content":"&lt;/&gt; Message:Pin() → boolean-- Whether the message was pinned Pins the message.  "},{"title":"RemoveAllReactions​","type":1,"pageTitle":"Message","url":"/Aloha/api/Message#RemoveAllReactions","content":"&lt;/&gt; Message:RemoveAllReactions() → boolean-- Whether all reactions were removed Removes all reactions from the message. "},{"title":"Misc","type":0,"sectionRef":"#","url":"/Aloha/api/Misc","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#functions","content":" "},{"title":"AddLineNumbers​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#AddLineNumbers","content":"&lt;/&gt; Misc.AddLineNumbers( input: string-- Input string to add line numbers to ) → string-- String with line numbers added   "},{"title":"ToSnowflake​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#ToSnowflake","content":"&lt;/&gt; Misc.ToSnowflake( input: string-- String to convert to snowflake ) → DiscordTypes.snowflake-- Discord snowflake ID   "},{"title":"FormatTime​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#FormatTime","content":"&lt;/&gt; Misc.FormatTime( seconds: number-- Number of seconds to format ) → string-- Formatted time string (e.g. &quot;1d2h3m4s&quot;)   "},{"title":"CreateTempFile​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#CreateTempFile","content":"&lt;/&gt; Misc.CreateTempFile( content: string-- Content to write to temporary file ) → { Path: string, Delete: () → () }-- Table containing file path and delete function   "},{"title":"Beautify​","type":1,"pageTitle":"Misc","url":"/Aloha/api/Misc#Beautify","content":"&lt;/&gt; Misc.Beautify( code: string-- Code string to beautify ) → string-- Beautified code string with proper indentation  "},{"title":"Guild","type":0,"sectionRef":"#","url":"/Aloha/api/Guild","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#types","content":" "},{"title":"Guild​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#Guild","content":"&lt;/&gt; type Guild = {} A guild object. "},{"title":"Functions​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#new","content":"&lt;/&gt; Guild.new( data: DiscordTypes.GuildData-- The guild data ) → Guild-- The guild object Creates a new guild object.  "},{"title":"GetChannel​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetChannel","content":"&lt;/&gt; Guild:GetChannel( id: string-- The channel ID ) → Channel-- The channel object Gets a channel in the guild.  "},{"title":"GetMember​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetMember","content":"&lt;/&gt; Guild:GetMember( userId: string-- The user ID ) → ( Member? | boolean, {any}? )-- The member object if found Gets a member in the guild.  "},{"title":"AddMember​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#AddMember","content":"&lt;/&gt; Guild:AddMember( userId: string,-- The user ID data: { access_token: string, nick: string?, roles: {string}?, mute: boolean?, deaf: boolean? }-- The member data ) → boolean-- Whether the member was added Adds a member to the guild.  "},{"title":"BulkBan​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#BulkBan","content":"&lt;/&gt; Guild:BulkBan( userIds: {string},-- Array of user IDs to ban delete_message_seconds: number?,-- Optional number of seconds of messages to delete reason: string? ) → boolean-- Whether the users were banned Bulk bans users from the guild.  "},{"title":"Unban​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#Unban","content":"&lt;/&gt; Guild:Unban( userId: string,-- The user ID reason: string? ) → boolean-- Whether the user was unbanned Unbans a user from the guild.  "},{"title":"Modify​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#Modify","content":"&lt;/&gt; Guild:Modify( data: DiscordTypes.GuildData-- The guild data to modify ) → ( boolean, {any}? )-- Whether the guild was modified and the response data Modifies the guild.  "},{"title":"Delete​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#Delete","content":"&lt;/&gt; Guild:Delete() → boolean-- Whether the guild was deleted Deletes the guild.  "},{"title":"GetChannels​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetChannels","content":"&lt;/&gt; Guild:GetChannels( noFetch: boolean?-- Whether to fetch from the API or use the cache ) → ({Channel} | {string: Channel})-- The channels Gets the channels in the guild.  "},{"title":"CreateRole​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#CreateRole","content":"&lt;/&gt; Guild:CreateRole( name: string,-- The role name permissions: string,-- The role permissions color: number,-- The role color hoist: boolean,-- Whether the role should be displayed separately icon: string?,-- Optional role icon unicode_emoji: string?,-- Optional role unicode emoji mentionable: boolean,-- Whether the role should be mentionable reason: string? ) → ( boolean, {any}? )-- Whether the role was created and the response data Creates a new role in the guild.  "},{"title":"GetRoles​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetRoles","content":"&lt;/&gt; Guild:GetRoles() → ( {DiscordTypes.RoleData} | boolean, {any}? )-- Array of roles if successful Gets all roles in the guild.  "},{"title":"GetRole​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetRole","content":"&lt;/&gt; Guild:GetRole( id: string-- The role ID ) → ( DiscordTypes.RoleData? | boolean, {any}? )-- The role data if found Gets a role in the guild.  "},{"title":"DeleteRole​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#DeleteRole","content":"&lt;/&gt; Guild:DeleteRole( id: string-- The role ID to delete ) → ( boolean, {any}? )-- Success status and response data Deletes a role from the guild.  "},{"title":"ModifyRole​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#ModifyRole","content":"&lt;/&gt; Guild:ModifyRole( id: string,-- The role ID to modify data: { name: string?, permissions: string?, color: number?, hoist: boolean?, icon: string?, unicode_emoji: string?, mentionable: boolean? }-- The data to modify ) → ( boolean, {any}? )-- Success status and response data Modifies a role in the guild.  "},{"title":"MoveRole​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#MoveRole","content":"&lt;/&gt; Guild:MoveRole( id: string,-- The role ID to move position: number-- The new position ) → ( boolean, {any}? )-- Success status and response data Changes a role's position in the guild's role hierarchy.  "},{"title":"GetVanityURL​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetVanityURL","content":"&lt;/&gt; Guild:GetVanityURL() → ( { code: string, uses: number }? | boolean, {any}? )-- The vanity URL data if successful Gets the guild's vanity URL if it has one.  "},{"title":"CreateChannel​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#CreateChannel","content":"&lt;/&gt; Guild:CreateChannel( data: DiscordTypes.CreateGuildChannelData-- The channel creation data ) → ( Channel? | boolean, {any}? )-- The created channel if successful Creates a new channel in the guild.  "},{"title":"GetMembers​","type":1,"pageTitle":"Guild","url":"/Aloha/api/Guild#GetMembers","content":"&lt;/&gt; Guild:GetMembers( noFetch: boolean?,-- Whether to fetch from the API or use the cache limit: number?,-- The maximum number of members to return after: string?-- The member ID to start after ) → ({Member} | {string: Member})-- The members Gets the members in the guild. "},{"title":"Mutex","type":0,"sectionRef":"#","url":"/Aloha/api/Mutex","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Mutex","url":"/Aloha/api/Mutex#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Mutex","url":"/Aloha/api/Mutex#new","content":"&lt;/&gt; Mutex.new() → Mutex-- A new mutex instance Creates a new mutex instance  "},{"title":"Lock​","type":1,"pageTitle":"Mutex","url":"/Aloha/api/Mutex#Lock","content":"&lt;/&gt; Mutex:Lock( prepend: boolean-- Whether to prepend the coroutine to the wait queue ) → () Locks the mutex. If already locked, yields the current coroutine until unlocked.  "},{"title":"Unlock​","type":1,"pageTitle":"Mutex","url":"/Aloha/api/Mutex#Unlock","content":"&lt;/&gt; Mutex:Unlock() → boolean?-- Returns true if a coroutine was resumed, nil otherwise Unlocks the mutex and resumes the next waiting coroutine if any  "},{"title":"UnlockAfter​","type":1,"pageTitle":"Mutex","url":"/Aloha/api/Mutex#UnlockAfter","content":"&lt;/&gt; Mutex:UnlockAfter( delay: number-- Delay in seconds before unlocking ) → Timer-- Timer instance that will unlock the mutex after the delay Creates a timer that unlocks the mutex after the specified delay "},{"title":"Objects","type":0,"sectionRef":"#","url":"/Aloha/api/Objects","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#functions","content":" "},{"title":"GetChannel​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetChannel","content":"&lt;/&gt; Objects.GetChannel( id: string,-- The channel ID forceData: DiscordTypes.ChannelData?, noFetch: boolean? ) → Channel-- The channel object Gets a channel by ID.  "},{"title":"GetUser​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetUser","content":"&lt;/&gt; Objects.GetUser( data: DiscordTypes.UserData-- The user data ) → User-- The user object Gets a user by ID.  "},{"title":"GetUserById​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetUserById","content":"&lt;/&gt; Objects.GetUserById( id: string,-- The user ID noFetch: boolean? ) → User?-- The user object if found Gets a user by ID.  "},{"title":"GetMessage​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetMessage","content":"&lt;/&gt; Objects.GetMessage( data: DiscordTypes.MessageData-- The message data ) → Message-- The message object Gets a message by ID.  "},{"title":"GetMessageInChannel​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetMessageInChannel","content":"&lt;/&gt; Objects.GetMessageInChannel( channelId: string,-- The channel ID messageId: string,-- The message ID noFetch: boolean? ) → Message?-- The message object if found Gets a message by ID in a channel.  "},{"title":"GetGuild​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetGuild","content":"&lt;/&gt; Objects.GetGuild( id: string,-- The guild ID forceData: DiscordTypes.GuildData?, noFetch: boolean? ) → Guild?-- The guild object if found Gets a guild by ID.  "},{"title":"GetMember​","type":1,"pageTitle":"Objects","url":"/Aloha/api/Objects#GetMember","content":"&lt;/&gt; Objects.GetMember( userId: string,-- The user ID guildId: string,-- The guild ID forceData: DiscordTypes.MemberData?, noFetch: boolean? ) → ( Member? | boolean, {any}? )-- The member object if found Gets a member by ID in a guild. "},{"title":"sha1","type":0,"sectionRef":"#","url":"/Aloha/api/sha1","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"sha1","url":"/Aloha/api/sha1#functions","content":" "},{"title":"sha1​","type":1,"pageTitle":"sha1","url":"/Aloha/api/sha1#sha1","content":"&lt;/&gt; sha1.sha1( message: string-- The payload to compute the SHA-1 hash of ) → buffer-- The computed SHA-1 hash as a buffer Computes the SHA-1 hash for the given message and returns it as a buffer "},{"title":"Sweeper","type":0,"sectionRef":"#","url":"/Aloha/api/Sweeper","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#new","content":"&lt;/&gt; Sweeper.new() → Sweeper Creates a new Sweeper instance.  "},{"title":"Add​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#Add","content":"&lt;/&gt; Sweeper:Add( object: T,-- The object to add methodName: boolean | string?,-- The cleanup method name or true for function/thread index: any?-- Optional custom index ) → T-- Returns the added object Adds an object to be cleaned up later.  "},{"title":"Sweep​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#Sweep","content":"&lt;/&gt; Sweeper:Sweep() → () Cleans up all objects in the Sweeper.  "},{"title":"GetAll​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#GetAll","content":"&lt;/&gt; Sweeper:GetAll() → {[any]: any}-- Table of all cached objects Returns a frozen clone of the cache.  "},{"title":"RemoveNoClean​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#RemoveNoClean","content":"&lt;/&gt; Sweeper:RemoveNoClean( index: any-- The index to remove ) → () Removes an object from the cache without cleaning it.  "},{"title":"Remove​","type":1,"pageTitle":"Sweeper","url":"/Aloha/api/Sweeper#Remove","content":"&lt;/&gt; Sweeper:Remove( index: any-- The index to remove ) → () Removes and cleans up an object from the cache. "},{"title":"Timer","type":0,"sectionRef":"#","url":"/Aloha/api/Timer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Timer","url":"/Aloha/api/Timer#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Timer","url":"/Aloha/api/Timer#new","content":"&lt;/&gt; Timer.new( time: number,-- The total time to run in seconds interval: number,-- The interval between callbacks in seconds interval_callback: ((totalTime: number) → ())?,-- Optional callback that runs each interval with total elapsed time end_callback: (() → ())?-- Optional callback that runs when timer completes ) → Timer-- The new Timer instance Creates a new Timer that runs for the specified duration.  "},{"title":"Stop​","type":1,"pageTitle":"Timer","url":"/Aloha/api/Timer#Stop","content":"&lt;/&gt; Timer:Stop() → () Stops the timer and cancels any pending callbacks. "},{"title":"User","type":0,"sectionRef":"#","url":"/Aloha/api/User","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"User","url":"/Aloha/api/User#types","content":" "},{"title":"User​","type":1,"pageTitle":"User","url":"/Aloha/api/User#User","content":"&lt;/&gt; type User = {} A user object. "},{"title":"Functions​","type":1,"pageTitle":"User","url":"/Aloha/api/User#functions","content":" "},{"title":"new​","type":1,"pageTitle":"User","url":"/Aloha/api/User#new","content":"&lt;/&gt; User.new( data: DiscordTypes.UserData-- The user data ) → User-- The user object Creates a new user object.  "},{"title":"GetDirectMessageChannel​","type":1,"pageTitle":"User","url":"/Aloha/api/User#GetDirectMessageChannel","content":"&lt;/&gt; User:GetDirectMessageChannel() → ( Channel? | boolean, {any}? )-- The DM channel if created Creates or gets a DM channel with the user. "},{"title":"Network","type":0,"sectionRef":"#","url":"/Aloha/api/Network","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#types","content":" "},{"title":"Response​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Response","content":"&lt;/&gt; type Response = net.FetchResponse Response type from net.request()  "},{"title":"ServeRequest​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#ServeRequest","content":"&lt;/&gt; type ServeRequest = net.ServeRequest Request type for net.serve()  "},{"title":"ServeResponse​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#ServeResponse","content":"&lt;/&gt; type ServeResponse = net.ServeResponse Response type for net.serve()  "},{"title":"ServeHandle​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#ServeHandle","content":"&lt;/&gt; type ServeHandle = net.ServeHandle Handle type for net.serve()  "},{"title":"WebSocket​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#WebSocket","content":"&lt;/&gt; type WebSocket = { Close: () → (), Next: () → (any), Send: (data: string) → () } WebSocket connection interface "},{"title":"Functions​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#functions","content":" "},{"title":"AttachFiles​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#AttachFiles","content":"&lt;/&gt; Network.AttachFiles( body: string,-- The request body files: {[any]: any}-- Files to attach ) → string,string-- Returns the multipart body and boundary   "},{"title":"Request​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Request","content":"&lt;/&gt; Network.Request( data: { method: string, endpoint: string, body: {[string]: any?}?, files: {[any]: any}? }-- Request data ) → boolean,Response-- Returns success status and response   "},{"title":"Commit​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Commit","content":"&lt;/&gt; Network.Commit( method: string,-- HTTP method url: string,-- Request URL headers: {[any]: any},-- Request headers body: string?,-- Request body retries: number-- Number of retries ) → {[any]: any},number-- Returns response data and delay   "},{"title":"Get​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Get","content":"&lt;/&gt; Network.Get( url: string,-- Request URL headers: {[string]: string}-- Request headers ) → boolean,string-- Returns success status and response   "},{"title":"Post​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Post","content":"&lt;/&gt; Network.Post( url: string,-- Request URL body: string,-- Request body headers: {[string]: string}-- Request headers ) → boolean,string-- Returns success status and response   "},{"title":"Delete​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Delete","content":"&lt;/&gt; Network.Delete( url: string,-- Request URL headers: {[string]: string}-- Request headers ) → boolean,string-- Returns success status and response   "},{"title":"Patch​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Patch","content":"&lt;/&gt; Network.Patch( url: string,-- Request URL body: string,-- Request body headers: {[string]: string}-- Request headers ) → boolean,string-- Returns success status and response   "},{"title":"Put​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Put","content":"&lt;/&gt; Network.Put( url: string,-- Request URL body: string,-- Request body headers: {[string]: string}-- Request headers ) → boolean,string-- Returns success status and response   "},{"title":"WebSocket​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#WebSocket","content":"&lt;/&gt; Network.WebSocket( url: string-- WebSocket URL ) → WebSocket-- Returns WebSocket interface   "},{"title":"Server​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#Server","content":"&lt;/&gt; Network.Server( port: number,-- Server port callback: (request: ServeRequest) → ServeResponse-- Request handler ) → ServeHandle-- Returns server handle   "},{"title":"JsonEncode​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#JsonEncode","content":"&lt;/&gt; Network.JsonEncode( data: any-- Data to encode ) → string-- Returns JSON string   "},{"title":"JsonDecode​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#JsonDecode","content":"&lt;/&gt; Network.JsonDecode( data: string-- JSON string to decode ) → {[any]: any}-- Returns decoded data   "},{"title":"UrlEncode​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#UrlEncode","content":"&lt;/&gt; Network.UrlEncode( data: string-- String to URL encode ) → string-- Returns encoded string   "},{"title":"UrlDecode​","type":1,"pageTitle":"Network","url":"/Aloha/api/Network#UrlDecode","content":"&lt;/&gt; Network.UrlDecode( data: string-- URL encoded string to decode ) → string-- Returns decoded string  "},{"title":"DiscordTypes","type":0,"sectionRef":"#","url":"/Aloha/api/DiscordTypes","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#types","content":" "},{"title":"snowflake​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#snowflake","content":"&lt;/&gt; type snowflake = string Discord's snowflake ID format  "},{"title":"UserData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#UserData","content":"&lt;/&gt; type UserData = { id: snowflake, username: string, discriminator: string, global_name: string?, avatar: string?, bot: boolean?, system: boolean?, mfa_enabled: boolean?, banner: string?, accent_color: number?, locale: string?, verified: boolean?, email: string?, flags: number?, premium_type: number?, public_flags: number?, avatar_decoration_data: AvatarDecorationData? } Discord user object data  "},{"title":"AllowedMentionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#AllowedMentionData","content":"&lt;/&gt; type AllowedMentionData = { parse: {string}?, roles: {snowflake}?, users: {snowflake}? } Allowed mention data  "},{"title":"ExecuteWebhookData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ExecuteWebhookData","content":"&lt;/&gt; type ExecuteWebhookData = { content: string?, username: string?, avatar_url: string?, tts: boolean?, embeds: {EmbedData}?, allowed_mentions: {AllowedMentionData}?, components: {ComponentData}?, files: {string}?, payload_json: string?, attachments: {AttachmentData}?, flags: number?, thread_name: string?, applied_tags: {string}?, poll: {PollData}? } Data for executing a webhook  "},{"title":"CreateGuildChannelData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#CreateGuildChannelData","content":"&lt;/&gt; type CreateGuildChannelData = { name: string, type: number, topic: string?, bitrate: number?, user_limit: number?, rate_limit_per_user: number?, permission_overwrites: {PermissionOverwriteData}?, parent_id: snowflake?, nsfw: boolean?, rtc_region: string?, video_quality_mode: number?, default_auto_archive_duration: number?, default_reaction_emoji: {ReactionData}?, available_tags: {ForumTagData}?, default_sort_order: number?, default_forum_layout: number?, default_thread_rate_limit_per_user: number? } Data for creating a new guild channel  "},{"title":"AvatarDecorationData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#AvatarDecorationData","content":"&lt;/&gt; type AvatarDecorationData = { asset: string, sku_id: number } Avatar decoration data  "},{"title":"PermissionOverwriteData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PermissionOverwriteData","content":"&lt;/&gt; type PermissionOverwriteData = { id: snowflake, type: number, allow: string, deny: string } Permission overwrite data for channels  "},{"title":"ThreadMetadataData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ThreadMetadataData","content":"&lt;/&gt; type ThreadMetadataData = { archived: boolean, auto_archive_duration: number, archive_timestamp: string, locked: boolean, invitable: boolean?, create_timestamp: string? } Thread metadata  "},{"title":"ForumTagData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ForumTagData","content":"&lt;/&gt; type ForumTagData = { id: snowflake, name: string, moderated: boolean, emoji_id: snowflake?, emoji_name: string? } Forum channel tag data  "},{"title":"ChannelData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ChannelData","content":"&lt;/&gt; type ChannelData = { id: snowflake, type: number, guild_id: snowflake?, position: number?, permission_overwrites: {PermissionOverwriteData}?, name: string?, topic: string?, nsfw: boolean?, last_message_id: snowflake?, bitrate: number?, user_limit: number?, rate_limit_per_user: number?, recipients: {UserData}?, icon: string?, owner_id: snowflake?, application_id: snowflake?, managed: boolean?, parent_id: snowflake?, last_pin_timestamp: string?, rtc_region: string?, video_quality_mode: number?, message_count: number?, thread_metadata: ThreadMetadataData?, member: ThreadMemberData?, default_auto_archive_duration: number?, permissions: string?, flags: number?, total_message_sent: number?, available_tags: {ForumTagData}?, applied_tags: {number}?, default_reaction_emoji: {ReactionData}?, default_thread_rate_limit_per_user: number?, default_sort_order: number?, default_forum_layout: number? } Channel data  "},{"title":"ChannelMentionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ChannelMentionData","content":"&lt;/&gt; type ChannelMentionData = { id: snowflake, guild_id: snowflake, type: number, name: string } Channel mention data  "},{"title":"AttachmentData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#AttachmentData","content":"&lt;/&gt; type AttachmentData = { id: snowflake, filename: string, title: string?, description: string?, content_type: string?, size: number, url: string, proxy_url: string, height: number?, width: number?, ephemeral: boolean?, duration_secs: number?, waveform: string?, flags: number? } Attachment data  "},{"title":"EmbedFooterData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedFooterData","content":"&lt;/&gt; type EmbedFooterData = { text: string, icon_url: string?, proxy_icon_url: string? } Embed footer data  "},{"title":"EmbedImageData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedImageData","content":"&lt;/&gt; type EmbedImageData = { url: string, proxy_url: string?, height: number?, width: number? } Embed image data  "},{"title":"EmbedProviderData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedProviderData","content":"&lt;/&gt; type EmbedProviderData = { url: string?, name: string? } Embed provider data  "},{"title":"EmbedAuthorData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedAuthorData","content":"&lt;/&gt; type EmbedAuthorData = { name: string, url: string?, icon_url: string?, proxy_icon_url: string? } Embed author data  "},{"title":"EmbedFieldData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedFieldData","content":"&lt;/&gt; type EmbedFieldData = { name: string, value: string, inline: boolean? } Embed field data  "},{"title":"EmbedData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmbedData","content":"&lt;/&gt; type EmbedData = { title: string?, type: string?, description: string?, url: string?, timestamp: string?, color: number?, footer: EmbedFooterData?, image: EmbedImageData?, thumbnail: EmbedImageData?, video: EmbedImageData?, provider: EmbedProviderData?, author: EmbedAuthorData?, fields: {EmbedFieldData}? } Embed data  "},{"title":"RoleTagsData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#RoleTagsData","content":"&lt;/&gt; type RoleTagsData = { bot_id: snowflake?, integration_id: snowflake?, premium_subscriber: boolean?, subscription_listing_id: snowflake?, available_for_purchase: boolean?, guild_connections: boolean? } Role tags data  "},{"title":"RoleData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#RoleData","content":"&lt;/&gt; type RoleData = { id: snowflake, name: string, color: number, hoist: boolean, icon: string?, unicode_emoji: string?, position: number, permissions: string, managed: boolean, mentionable: boolean, tags: RoleTagsData?, flags: number } Role data  "},{"title":"ReactionCountDetailsData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ReactionCountDetailsData","content":"&lt;/&gt; type ReactionCountDetailsData = { burst: number, normal: number } Reaction count details  "},{"title":"EmojiData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EmojiData","content":"&lt;/&gt; type EmojiData = { id: snowflake, name: string, roles: {number}?, user: UserData?, require_colons: boolean?, managed: boolean?, animated: boolean?, available: boolean? } Emoji data  "},{"title":"ReactionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ReactionData","content":"&lt;/&gt; type ReactionData = { count: number, count_details: ReactionCountDetailsData, me: boolean, me_burst: boolean, emoji: EmojiData, burst_colors: {number} } Reaction data  "},{"title":"ActivityData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ActivityData","content":"&lt;/&gt; type ActivityData = { type: number, party_id: snowflake? } Activity data  "},{"title":"TeamMemberData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#TeamMemberData","content":"&lt;/&gt; type TeamMemberData = { user: UserData, membership_state: number, role: string, team_id: snowflake } Team member data  "},{"title":"TeamData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#TeamData","content":"&lt;/&gt; type TeamData = { icon: string?, id: snowflake, members: {TeamMemberData}, name: string, owner_user_id: snowflake } Team data  "},{"title":"WelcomeScreenChannelData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#WelcomeScreenChannelData","content":"&lt;/&gt; type WelcomeScreenChannelData = { channel_id: snowflake, description: string, emoji_id: snowflake?, emoji_name: string? } Welcome screen channel data  "},{"title":"WelcomeScreenData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#WelcomeScreenData","content":"&lt;/&gt; type WelcomeScreenData = { description: string?, welcome_channels: {WelcomeScreenChannelData}? } Welcome screen data  "},{"title":"GuildData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#GuildData","content":"&lt;/&gt; type GuildData = { id: snowflake, name: string, icon: string?, icon_hash: string?, splash: string?, discovery_splash: string?, owner: boolean, owner_id: snowflake, permissions: string?, region: string?, afk_channel_id: snowflake?, afk_timeout: number, widget_enabled: boolean?, widget_channel_id: snowflake?, verification_level: number, default_message_notifications: number, explicit_content_filter: number, roles: {RoleData}?, emojis: {EmojiData}?, features: {string}, mfa_level: number, application_id: snowflake?, system_channel_id: snowflake?, system_channel_flags: number, rules_channel_id: snowflake?, max_presences: number?, max_members: number?, vanity_url_code: string?, description: string?, banner: string?, premium_tier: number, premium_subscription_count: number?, preferred_locale: string, public_updates_channel_id: snowflake?, max_video_channel_users: number?, max_stage_video_channel_users: number?, approximate_member_count: number?, approximate_presence_count: number?, welcome_screen: WelcomeScreenData?, nsfw_level: number, stickers: {StickerData}?, premium_progress_bar_enabled: boolean, safety_alerts_channel_id: snowflake? } Guild data  "},{"title":"InstallParamsData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#InstallParamsData","content":"&lt;/&gt; type InstallParamsData = { scopes: {string}, permissions: string } Install params data  "},{"title":"ApplicationData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ApplicationData","content":"&lt;/&gt; type ApplicationData = { id: snowflake, name: string, icon: string?, description: string, rpc_origins: {string}?, bot_public: boolean, bot_require_code_grant: boolean, bot: UserData?, terms_of_service_url: string?, privacy_policy_url: string?, owner: UserData?, verify_key: string?, team: TeamData?, guild_id: snowflake?, guild: GuildData?, primary_sku_id: number?, slug: string?, cover_image: string?, flags: number?, approximate_guild_count: number?, approximate_user_install_count: number?, redirect_uris: {string}?, interactions_endpoint_url: string?, role_connections_verification_url: string?, tags: {string}?, install_params: InstallParamsData?, integration_types_config: { GUILD_INSTALL: number, USER_INSTALL: number }, custom_install_url: string? } Application data  "},{"title":"CommandOptionChoiceData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#CommandOptionChoiceData","content":"&lt;/&gt; type CommandOptionChoiceData = { name: string, name_localizations: {[string]: string}?, value: (string | number) } Command option choice data  "},{"title":"CommandOptionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#CommandOptionData","content":"&lt;/&gt; type CommandOptionData = { type: number, name: string, name_localizations: {[string]: string}?, description: string, description_localizations: {[string]: string}?, required: boolean?, choices: {CommandOptionChoiceData}?, options: {CommandOptionData}?, channel_types: {number}?, min_value: number?, max_value: number?, min_length: number?, max_length: number?, autocomplete: boolean? } Command option data  "},{"title":"MessageReferenceData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#MessageReferenceData","content":"&lt;/&gt; type MessageReferenceData = { type: number?, message_id: snowflake?, guild_id: snowflake?, channel_id: snowflake?, fail_if_not_exists: boolean? } Message reference data  "},{"title":"MessageSnapshotData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#MessageSnapshotData","content":"&lt;/&gt; type MessageSnapshotData = {message: MessageData} Message snapshot data  "},{"title":"ApplicationCommandData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ApplicationCommandData","content":"&lt;/&gt; type ApplicationCommandData = { id: snowflake, type: number, application_id: snowflake, guild_id: snowflake?, name: string, name_localizations: {[string]: string}?, description: string, description_localizations: {[string]: string}?, options: {CommandOptionData}?, default_member_permissions: string?, dm_permission: boolean?, default_permission: boolean?, nsfw: boolean?, integration_type: number?, contexts: {number}?, version: snowflake, handler: number } Application command data  "},{"title":"MessageComponentInteractionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#MessageComponentInteractionData","content":"&lt;/&gt; type MessageComponentInteractionData = { custom_id: string, component_type: number, values: {(string | number | boolean)}?, resolved: ResolvedData? } Message component interaction data  "},{"title":"EntitlementData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#EntitlementData","content":"&lt;/&gt; type EntitlementData = { id: snowflake, sku_id: snowflake, plan: { id: snowflake, price: number } } Entitlement data  "},{"title":"InteractionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#InteractionData","content":"&lt;/&gt; type InteractionData = { id: snowflake, application_id: snowflake, type: number, data: (ApplicationCommandInteractionData | MessageComponentInteractionData)?, guild: GuildData?, guild_id: snowflake?, channel: ChannelData?, channel_id: snowflake?, member: MemberData?, user: UserData?, token: string, version: number, message: MessageData, app_permissions: string, locale: string, guild_locale: string, entitlements: {EntitlementData}?, authorizing_integration_owners: {[number]: snowflake}, context: number } Interaction data  "},{"title":"InteractionCallbackData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#InteractionCallbackData","content":"&lt;/&gt; type InteractionCallbackData = { tts: boolean?, content: string?, embeds: {EmbedData}?, allowed_mentions: {string}?, flags: number?, components: {ComponentData}?, attachments: {AttachmentData}?, poll: PollData? } Interaction callback data  "},{"title":"ApplicationCommandInteractionDataOptionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ApplicationCommandInteractionDataOptionData","content":"&lt;/&gt; type ApplicationCommandInteractionDataOptionData = { name: string, type: number, value: (string | number | boolean)?, options: {ApplicationCommandInteractionDataOptionData}?, focused: boolean? } Application command interaction data option  "},{"title":"ApplicationCommandInteractionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ApplicationCommandInteractionData","content":"&lt;/&gt; type ApplicationCommandInteractionData = { id: snowflake, name: string, type: number, resolved: ResolvedData?, options: {ApplicationCommandInteractionDataOptionData}?, guild_id: snowflake?, target_id: snowflake? } Application command interaction data  "},{"title":"InteractionMetadataData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#InteractionMetadataData","content":"&lt;/&gt; type InteractionMetadataData = { id: snowflake, type: number, user: UserData, authorizing_integration_owners: {[number]: snowflake}, original_response_message_id: snowflake?, interacted_message_id: snowflake?, triggering_interaction_metadata: {} } Interaction metadata  "},{"title":"ComponentData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ComponentData","content":"&lt;/&gt; type ComponentData = {[number]: { type: number, components: {[number]: { type: number, label: string, style: number, custom_id: snowflake }} }} Component data  "},{"title":"StickerItemData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#StickerItemData","content":"&lt;/&gt; type StickerItemData = { id: snowflake, name: string, format_type: number } Sticker item data  "},{"title":"StickerData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#StickerData","content":"&lt;/&gt; type StickerData = { id: snowflake, pack_id: snowflake?, name: string, description: string?, tags: string, type: number, format_type: number, available: boolean?, guild_id: snowflake?, user: UserData?, sort_value: number? } Sticker data  "},{"title":"StickerPackData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#StickerPackData","content":"&lt;/&gt; type StickerPackData = { id: snowflake, stickers: {StickerData}, name: string, sku_id: number, cover_sticker_id: snowflake?, description: string, banner_asset_id: snowflake? } Sticker pack data  "},{"title":"ThreadMemberData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ThreadMemberData","content":"&lt;/&gt; type ThreadMemberData = { id: snowflake?, user_id: snowflake?, join_timestamp: string, flags: number, member: MemberData? } Thread member data  "},{"title":"MemberData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#MemberData","content":"&lt;/&gt; type MemberData = { user: UserData?, nick: string?, avatar: string?, banner: string?, roles: {number}?, joined_at: string, premium_since: string?, deaf: boolean, mute: boolean, pending: boolean?, permissions: string?, communication_disabled_until: string?, avatar_decoration_data: AvatarDecorationData? } Member data  "},{"title":"RoleSubscriptionData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#RoleSubscriptionData","content":"&lt;/&gt; type RoleSubscriptionData = { role_subscription_listing_id: snowflake, tier_name: string, total_months_subscribed: number, is_renewing: boolean } Data for a role subscription  "},{"title":"PollMediaData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PollMediaData","content":"&lt;/&gt; type PollMediaData = { text: string?, emoji: EmojiData? } Media data for a poll  "},{"title":"PollAnswerData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PollAnswerData","content":"&lt;/&gt; type PollAnswerData = { answer_id: snowflake, poll_media: PollMediaData } Data for a poll answer  "},{"title":"PollAnswerCountData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PollAnswerCountData","content":"&lt;/&gt; type PollAnswerCountData = { id: snowflake, count: number, me_voted: boolean } Count data for a poll answer  "},{"title":"PollResultData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PollResultData","content":"&lt;/&gt; type PollResultData = { is_finalized: boolean, answer_counts: {PollAnswerCountData} } Results data for a poll  "},{"title":"PollData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#PollData","content":"&lt;/&gt; type PollData = { question: PollMediaData, answers: {PollAnswerData}, expiry: string?, allow_multiselect: boolean, layout_type: number, results: {PollResultData} } Data for a poll  "},{"title":"CallData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#CallData","content":"&lt;/&gt; type CallData = { participants: {number}?, ended_timestamp: string? } Data for a voice call  "},{"title":"ResolvedData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#ResolvedData","content":"&lt;/&gt; type ResolvedData = { users: {UserData}?, members: {MemberData}?, roles: {RoleData}?, channels: {ChannelData}?, message: MessageData?, attachments: {AttachmentData}? } Resolved data for interactions  "},{"title":"Payload​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#Payload","content":"&lt;/&gt; type Payload = { op: number?, d: {[string]:any}, s: number?, t: string? } Gateway payload data  "},{"title":"MessageData​","type":1,"pageTitle":"DiscordTypes","url":"/Aloha/api/DiscordTypes#MessageData","content":"&lt;/&gt; type MessageData = { id: snowflake, channel_id: snowflake, author: UserData, content: string, timestamp: string, edited_timestamp: string?, tts: boolean, mention_everyone: boolean, mentions: {UserData}, mention_roles: {number}, mention_channels: {ChannelMentionData}, attachments: {AttachmentData}, embeds: {EmbedData}, reactions: {ReactionData}?, nonce: (number | string)?, pinned: boolean, webhook_id: snowflake?, type: number, activity: ActivityData?, application: ApplicationData?, application_id: snowflake?, flags: number?, message_reference: MessageReferenceData?, message_snapshots: {MessageSnapshotData}?, referenced_message: MessageData?, interaction_metadata: InteractionMetadataData?, interaction: InteractionData?, thread: ChannelData?, components: {ComponentData}?, sticker_items: {StickerItemData}?, stickers: {StickerData}?, position: number?, role_subscription_data: RoleSubscriptionData?, resolved: ResolvedData?, poll: PollData?, call: CallData? } Message data "}]