[{"title":"Bot","type":0,"sectionRef":"#","url":"/Aloha/docs/lib/bot","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Bot","url":"/Aloha/docs/lib/bot#properties","content":"Property\tType\tDescriptionDISCORD_API_VERSION\tstring\tVersion number for the Discord API. DO NOT CHANGE THIS. ALOHA_VERSION\tstring\tVersion number for Aloha. DO NOT CHANGE THIS. PROCESS_ID\tnumber\tThe current PID for the lune process running the bot. TOKEN\tstring\tThe token used to run the bot. This is set with Aloha.Run() Client\tUser?\tThe user object reference for the bot. Shards\t{[number]: {Sent: number, Socket: DiscordWebSocket, ResumeURL: string, SessionID: string}}\tAn array of websocket shards for the bot, indexed by Shard ID. Sent used for ratelimiting, and Socket is the websocket object for that shard. SHARD_COUNT\tnumber\tThe number of shards for the bot. STARTED_AT\tnumber\tThe time that the bot started at. RATE_LIMIT\tnumber\tRate limit used for commands. INTENTS\tnumber\tBot intents. Defaults to ALL (53608447) CLOSE_REASONS\t{[number]: string}\tClose reason definitions that are indexed when a websocket closes. "},{"title":"Aloha","type":0,"sectionRef":"#","url":"/Aloha/docs/intro","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#properties","content":"None "},{"title":"Methods​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#methods","content":""},{"title":"Run​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#run","content":"Aloha.Run(token: string, intents: number?) This is what gets your bot running. The first argument is required, and is your bot token, formatted without the Bot prefix. It adds it for you! Takes an optional second parameter for intents. Aloha provides you with some base intents to use in the Enum module: Aloha.Run(BOT_TOKEN_STRING, Enum.INTENTS.ALL) -- Let's get this ball rolling!   "},{"title":"RegisterDefaultCommands​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#registerdefaultcommands","content":"Aloha.RegisterDefaultCommands(options: DefaultCommandOptions?) : {Command} Aloha comes with a few built-in application commands to make your life easier. This function will register all of them for you and allow them to be used on your bot. Note: None of these commands require privileged intents. Takes an optional dictionary of options, and returns an array of all the commands registered. Aloha.RegisterDefaultCommands({rateLimit = 5})   "},{"title":"RegisterCommandsIn​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#registercommandsin","content":"Aloha.RegisterCommandsIn(directory: string) This will allow you to register commands in a given directory. An example of command formatting is shown below. Aloha.RegisterCommandsIn(&quot;./Commands&quot;)  Command format example:​ return { Data = { name = &quot;uptime&quot;, description = &quot;shows the uptime of Aloha.&quot;, type = Enum.APPLICATION_COMMAND_TYPE.CHAT_INPUT }, Response = function(data: DiscordTypes.ApplicationCommandInteractionData) return { type = Enum.INTERACTION_CALLBACK_TYPE.CHANNEL_MESSAGE_WITH_SOURCE, data = { embeds = { Embed.new().setColor(Color3.new(252/255, 152/255, 3/255)) .setDescription(`Aloha has been online for {Misc.FormatTime(os.time() - Bot.STARTED_AT)}`).finish() }, flags = Enum.MESSAGE_FLAGS.EPHEMERAL } } end }   "},{"title":"ClearTemp​","type":1,"pageTitle":"Aloha","url":"/Aloha/docs/intro#cleartemp","content":"Aloha.ClearTemp() Clears the /temp folder. This is automatically called in Run, but if for whatever reason you need to do it on runtime, you can! "}]