"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2048],{81670:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Timer that runs for the specified duration.","params":[{"name":"time","desc":"The total time to run in seconds","lua_type":"number"},{"name":"interval","desc":"The interval between callbacks in seconds","lua_type":"number"},{"name":"interval_callback","desc":"Optional callback that runs each interval with total elapsed time","lua_type":"((totalTime: number) -> ())?"},{"name":"end_callback","desc":"Optional callback that runs when timer completes","lua_type":"(() -> ())?"}],"returns":[{"desc":"The new Timer instance","lua_type":"Timer"}],"function_type":"static","source":{"line":19,"path":"../Aloha/Aloha/Classes/Timer.luau"}},{"name":"Stop","desc":"Stops the timer and cancels any pending callbacks.","params":[],"returns":[],"function_type":"method","source":{"line":47,"path":"../Aloha/Aloha/Classes/Timer.luau"}}],"properties":[],"types":[],"name":"Timer","desc":"A utility class for managing timed callbacks.","source":{"line":5,"path":"../Aloha/Aloha/Classes/Timer.luau"}}')}}]);