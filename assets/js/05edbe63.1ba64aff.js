"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4871],{65200:e=>{e.exports=JSON.parse('{"functions":[{"name":"AttachFiles","desc":"","params":[{"name":"body","desc":"The request body","lua_type":"string"},{"name":"files","desc":"Files to attach","lua_type":"{[any]: any}"}],"returns":[{"desc":"Returns the multipart body and boundary","lua_type":"string, string"}],"function_type":"static","source":{"line":101,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Request","desc":"","params":[{"name":"data","desc":"Request data","lua_type":"{method: string, endpoint: string, body: {[string]: any?}?, files: {[any]: any}?}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, Response"}],"function_type":"static","source":{"line":128,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Commit","desc":"","params":[{"name":"method","desc":"HTTP method","lua_type":"string"},{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[any]: any}"},{"name":"body","desc":"Request body","lua_type":"string?"},{"name":"retries","desc":"Number of retries","lua_type":"number"}],"returns":[{"desc":"Returns response data and delay","lua_type":"{[any]: any}, number"}],"function_type":"static","source":{"line":205,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Get","desc":"","params":[{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[string]: string}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, string"}],"function_type":"static","source":{"line":270,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Post","desc":"","params":[{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"body","desc":"Request body","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[string]: string}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, string"}],"function_type":"static","source":{"line":290,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Delete","desc":"","params":[{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[string]: string}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, string"}],"function_type":"static","source":{"line":310,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Patch","desc":"","params":[{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"body","desc":"Request body","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[string]: string}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, string"}],"function_type":"static","source":{"line":330,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Put","desc":"","params":[{"name":"url","desc":"Request URL","lua_type":"string"},{"name":"body","desc":"Request body","lua_type":"string"},{"name":"headers","desc":"Request headers","lua_type":"{[string]: string}"}],"returns":[{"desc":"Returns success status and response","lua_type":"boolean, string"}],"function_type":"static","source":{"line":351,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"WebSocket","desc":"","params":[{"name":"url","desc":"WebSocket URL","lua_type":"string"}],"returns":[{"desc":"Returns WebSocket interface","lua_type":"WebSocket"}],"function_type":"static","source":{"line":370,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"Server","desc":"","params":[{"name":"port","desc":"Server port","lua_type":"number"},{"name":"callback","desc":"Request handler","lua_type":"(request: ServeRequest) -> ServeResponse"}],"returns":[{"desc":"Returns server handle","lua_type":"ServeHandle"}],"function_type":"static","source":{"line":389,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"JsonEncode","desc":"","params":[{"name":"data","desc":"Data to encode","lua_type":"any"}],"returns":[{"desc":"Returns JSON string","lua_type":"string"}],"function_type":"static","source":{"line":399,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"JsonDecode","desc":"","params":[{"name":"data","desc":"JSON string to decode","lua_type":"string"}],"returns":[{"desc":"Returns decoded data","lua_type":"{[any]: any}"}],"function_type":"static","source":{"line":409,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"UrlEncode","desc":"","params":[{"name":"data","desc":"String to URL encode","lua_type":"string"}],"returns":[{"desc":"Returns encoded string","lua_type":"string"}],"function_type":"static","source":{"line":419,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"UrlDecode","desc":"","params":[{"name":"data","desc":"URL encoded string to decode","lua_type":"string"}],"returns":[{"desc":"Returns decoded string","lua_type":"string"}],"function_type":"static","source":{"line":429,"path":"../Aloha/Aloha/Lib/Network.luau"}}],"properties":[],"types":[{"name":"Response","desc":"Response type from net.request()","lua_type":"net.FetchResponse","source":{"line":17,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"ServeRequest","desc":"Request type for net.serve()","lua_type":"net.ServeRequest","source":{"line":24,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"ServeResponse","desc":"Response type for net.serve()","lua_type":"net.ServeResponse","source":{"line":31,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"ServeHandle","desc":"Handle type for net.serve()","lua_type":"net.ServeHandle","source":{"line":38,"path":"../Aloha/Aloha/Lib/Network.luau"}},{"name":"WebSocket","desc":"WebSocket connection interface","lua_type":"{Close: () -> (), Next: () -> (any), Send: (data: string) -> ()}","source":{"line":45,"path":"../Aloha/Aloha/Lib/Network.luau"}}],"name":"Network","desc":"Library to handle network requests and responses. Provides methods for making HTTP requests, handling WebSocket connections, and managing rate limits.","source":{"line":5,"path":"../Aloha/Aloha/Lib/Network.luau"}}')}}]);